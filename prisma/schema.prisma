// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Statut {
  ATTENTE
  ACCEPTE
  REFUSE
}

enum Vue {
  OUI
  NON
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  demandesEnvoyees DemandeAmis[] @relation("demandeur")
  demandesRecues DemandeAmis[] @relation("destinataire")
  equipe Equipe[]
}

model Equipe {
  id        String   @id @default(cuid())
  nom       String
  description String?
  user User @relation(fields: [userId], references: [id])
  userId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  equipePokemon EquipePokemon[]

}

model DemandeAmis {
  id        String   @id @default(cuid())
  demandeur User @relation("demandeur", fields: [demandeurId], references: [id])
  demandeurId String
  destinataire User @relation("destinataire", fields: [destinataireId], references: [id])
  destinataireId String
  statut Statut @default(ATTENTE)
  vue Vue @default(NON)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EquipePokemon {
  id String @id @default(cuid())
  pokemon String
  equipe Equipe @relation(fields: [equipeId], references: [id])
  equipeId String
}

